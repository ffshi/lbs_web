<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovate.cms.modules.qs.dao.sns.TempFollowDao">

	<sql id="TempFollowColumns">
		`tfid`,
	    `uid`,
	    `follow_uid`,
	    `follow_img`,
	    `follow_name`,
	    `create_time`
	</sql>

	<sql id="TempFollowJoins">
	</sql>

	<select id="get" resultType="TempFollow">
		SELECT
		<include refid="TempFollowColumns" />
		FROM temp_follow a
		<include refid="TempFollowJoins" />
		WHERE a.tfid = #{tfid}
	</select>

	<delete id="delRecommendedFriends" parameterType="java.util.List">
		DELETE FROM temp_follow where tfid in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>


	<select id="recommendFriends" resultType="TempFollow">
		SELECT
			a1.tfid,
			a1.followImg,
			a1.followName,
			a1.followUid
		FROM
			(
				SELECT
					tf.tfid AS "tfid",
					tf.follow_img AS "followImg",
					tf.follow_name AS "followName",
					tf.follow_uid AS "followUid",
					tf.create_time
				FROM
					temp_follow AS tf
				WHERE
					tf.uid = #{uid}
			) a1
		WHERE
			NOT EXISTS (
				SELECT
					'x'
				FROM
					qx_follow AS qf
				WHERE
					qf.uid = #{uid}
				AND a1.followUid = qf.follow_uid
				AND qf.del_flag = '0'
			)
		ORDER BY
			a1.create_time DESC
		LIMIT #{num}
	</select>

	<select id="findList" resultType="TempFollow">
		SELECT
		<include refid="TempFollowColumns" />
		FROM temp_follow a
		<include refid="TempFollowJoins" />
		<where>
			<if test="msid != null and msid != ''">
				AND a.tfid = #{tfid}
			</if>
			<if test="toId != null and toId != ''">
				AND a.uid = #{uid}
			</if>
			<if test="fromId != null and fromId != ''">
				AND a.follow_uid = #{follow_uid}
			</if>
		</where>
	</select>

	<select id="findAllList" resultType="TempFollow">
		SELECT
		<include refid="TempFollowColumns" />
		FROM temp_follow a
	</select>

	<select id="findIsFollow" resultType="TempFollow">
		SELECT
			tf.uid
		FROM
			temp_follow AS tf
		WHERE
			tf.uid = #{uid}
		AND tf.follow_uid = #{followUid}
		UNION
		SELECT
			tf.uid
		FROM
			qx_follow AS tf
		WHERE
			tf.uid = #{uid}
		AND tf.follow_uid = #{followUid}
		AND tf.del_flag = '0'
	</select>

	<insert id="insert">
		INSERT INTO `temp_follow` (
				`uid`,
				`follow_uid`,
				`follow_img`,
				`follow_name`
				)
		SELECT
			a1.uid,
			a1.follow_uid,
			su.headimgurl,
			su.nickname
		FROM
			(
				SELECT
					#{uid} AS "uid",
					#{followUid} AS "follow_uid"
				FROM
					DUAL
			) a1,
			system_user AS su
		WHERE
			su.uid = #{followUid}
				AND
					NOT EXISTS (
						SELECT
							'x'
						FROM
							temp_follow AS tf
						WHERE
							tf.uid = #{uid}
						AND tf.follow_uid = #{followUid}
					)
	</insert>

	<update id="update">
		UPDATE `temp_follow`
		SET 
		`tfid` = #{tfid},
		`uid` = #{uid},
		`follow_uid` = #{follow_uid},
		`follow_img` = #{follow_img},
		`follow_name` #{follow_name},
		`create_time` #{create_time}
		WHERE
			tfid = #{tfid}
	</update>

	<update id="delDuplicateFriends">
		DELETE tf
		FROM
		temp_follow AS tf,
		qx_follow AS qf
		WHERE
		tf.uid=#{uid} and
		tf.uid = qf.uid
		AND tf.follow_uid = qf.follow_uid AND qf.del_flag = '0';
	</update>

</mapper>