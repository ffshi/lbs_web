<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovate.cms.modules.qs.dao.sns.QxMessagePostDao">
	<resultMap type="com.innovate.cms.modules.data.entity.MessageToJson"
		id="messageList">
		<id property="msid" column="msid" />
		<result property="fromId" column="fromId" />
		<result property="fromImg" column="fromImg" />
		<result property="fromName" column="fromName" />
		<result property="fromContent" column="fromContent" />
		<result property="funType" column="funType" />
		<result property="createTime" column="createTime" />
		<collection property="replyLists"
			ofType="com.innovate.cms.modules.qs.entity.sns.MessagePost">
			<id property="poid" column="poid" />
			<result property="fromReplyUid" column="fromReplyUid" />
			<result property="fromReplyName" column="fromReplyName" />
			<result property="fromReplyImg" column="fromReplyImg" />
			<result property="toReplyUid" column="toReplyUid" />
			<result property="toReplyName" column="toReplyName" />
			<result property="replyContent" column="replyContent" />
			<result property="createTime" column="createTime1" />
		</collection>
	</resultMap>


	<insert id="saveReplyMessage">
		INSERT INTO qx_message_post(
		poid,
		msid,
		from_reply_uid,
		from_reply_name,
		from_reply_img,
		to_reply_uid,
		to_reply_name,
		reply_content,
		update_time,
		create_time,
		del_flag
		) VALUES (
		#{poid},
		#{msid},
		#{fromReplyUid},
		#{fromReplyName},
		#{fromReplyImg},
		#{toReplyUid},
		#{toReplyName},
		#{replyContent},
		#{updateTime},
		#{createTime},
		#{delFlag}
		)
	</insert>

	<select id="getCount" resultType="int">
		SELECT
		COUNT(1)
		FROM
		qx_message m
		WHERE
		m.to_id = #{uid}
		AND m.fun_type = #{funType}
		AND m.del_flag = '0'
	</select>


	<select id="getMessageList" resultMap="messageList">
		SELECT
		m.`msid` AS 'msid',
		m.`from_id` AS 'fromId',
		m.`from_img` AS 'fromImg',
		m.`from_name` AS
		'fromName',
		m.`from_content` AS 'fromContent',
		m.`fun_type` AS
		'funType',
		m.`create_time` AS 'createTime',
		mp.`poid` AS 'poid',
		mp.`from_reply_uid` AS 'fromReplyUid',
		mp.`from_reply_name` AS
		'fromReplyName',
		mp.`from_reply_img` AS 'fromReplyImg',
		mp.`to_reply_uid` AS 'toReplyUid',
		mp.`to_reply_name` AS 'toReplyName',
		mp.`reply_content` AS 'replyContent',
		mp.`create_time` AS 'createTime1'
		FROM (
		SELECT msid, to_id, to_name, from_id, from_img, from_name,
		from_content, fun_type, create_time
		FROM qx_message
		WHERE del_flag = '0'
		AND to_id = #{uid}
		AND fun_type = #{funType}
		ORDER BY create_time desc
		LIMIT #{offset}, #{limit}
		) m
		LEFT JOIN
		qx_message_post mp
		ON m.msid =
		mp.msid
		AND mp.del_flag = '0'
		ORDER BY
		m.create_time DESC,
		mp.create_time
	</select>
	
	<select id="isMessageExist" resultType="int">
		SELECT
		count(1)
		FROM
		qx_message AS m
		WHERE
		m.msid = #{id}
		AND m.del_flag = '0'
		AND m.to_id = #{uid}
	</select>
	<select id="getReply" resultType="com.innovate.cms.modules.qs.entity.sns.QxMessagePost">
		SELECT
		mp.`poid` AS 'poid',
		mp.`msid` AS 'msid',
		mp.`from_reply_uid` AS 'fromReplyUid',
		mp.`from_reply_name` AS 'fromReplyName',
		mp.`from_reply_img` AS 'fromReplyImg',
		mp.`to_reply_uid` AS 'toReplyUid',
		mp.`to_reply_name` AS 'toReplyName',
		mp.`reply_content` AS 'replyContent',
		mp.`create_time` AS 'createTime'
		FROM
		qx_message_post AS mp
		WHERE
		mp.poid = #{id}
		AND mp.del_flag = '0'
		AND mp.from_reply_uid = #{uid}

	</select>
		<select id="getMessageById" resultType="com.innovate.cms.modules.qs.entity.sns.QxMessage">
		SELECT
		a.msid AS "msid",
		a.to_id AS "toId",
		a.to_name AS "toName",
		a.from_id AS "fromId",
		a.from_img AS "fromImg",
		a.from_name AS "fromName",
		a.from_content AS "fromContent",
		a.fun_type AS "funType",
		a.update_time AS "updateTime",
		a.create_time AS "createTime"
		FROM
		qx_message AS a
		WHERE
		a.msid = #{msid}
		AND a.del_flag = '0'
	</select>
	

	<update id="delMessageById">
		UPDATE qx_message SET
		del_flag = '1'
		WHERE msid = #{id}
	</update>

	<update id="delReplyMessageById">
		UPDATE qx_message_post SET
		del_flag = '1'
		WHERE poid = #{id}
	</update>

	<update id="updatePost">
		UPDATE qx_message_post
		SET to_reply_name = (
			CASE to_reply_uid
			WHEN #{uid} THEN
				#{nickname}
			ELSE
				to_reply_name
			END
		),
		 from_reply_name = (
			CASE from_reply_uid
			WHEN #{uid} THEN
				#{nickname}
			ELSE
				from_reply_name
			END
		),
		 from_reply_img = (
			CASE from_reply_uid
			WHEN #{uid} THEN
				#{headimgurl}
			ELSE
				from_reply_img
			END
		)
		WHERE
			del_flag = "0"
			AND (from_reply_uid = #{uid}
			OR to_reply_uid = #{uid})
	</update>

</mapper>