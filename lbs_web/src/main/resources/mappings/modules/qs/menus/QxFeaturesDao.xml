<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovate.cms.modules.qs.dao.menus.QxFeaturesDao">
    
	<sql id="qxFeaturesColumns">
		a.fsid AS "fsid",
		a.cid AS "cid",
		a.feature_name AS "featureName",
		a.icon AS "icon",
		a.sort AS "sort",
		a.update_time AS "updateTime",
		a.create_time AS "createTime",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="qxFeaturesJoins">
	</sql>
    
	<select id="get" resultType="QxFeatures">
		SELECT 
			<include refid="qxFeaturesColumns"/>
		FROM qx_features a
		<include refid="qxFeaturesJoins"/>
		WHERE a.fsid = #{fsid}
	</select>
	
	<select id="findList" resultType="QxFeatures">
		SELECT 
			<include refid="qxFeaturesColumns"/>
		FROM qx_features a
		<include refid="qxFeaturesJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="fsid != null and fsid != ''">
				AND a.fsid = #{fsid}
			</if>
			<if test="cid != null and cid != ''">
				AND a.cid = #{cid}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="QxFeatures">
		SELECT 
			<include refid="qxFeaturesColumns"/>
		FROM qx_features a
		<include refid="qxFeaturesJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO qx_features(
			fsid,
			cid,
			feature_name,
			icon,
			sort,
			update_time,
			create_time,
			del_flag
		) VALUES (
			#{fsid},
			#{cid},
			#{featureName},
			#{icon},
			#{sort},
			#{updateTime},
			#{createTime},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE qx_features SET 	
			fsid = #{fsid},
			cid = #{cid},
			feature_name = #{featureName},
			icon = #{icon},
			sort = #{sort},
			update_time = #{updateTime},
			create_time = #{createTime}
		WHERE fsid = #{fsid}
	</update>
	
	<update id="delete">
		UPDATE qx_features SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE fsid = #{fsid}
	</update>
	
	<resultMap type="com.innovate.cms.modules.data.entity.MenuFeaturesToJson" id="featuresList">
		<id property="cid" column="cid"/>
		<collection property="features" ofType="com.innovate.cms.modules.qs.entity.menus.Features">
			<result property="fsid" column="fsid" />
			<result property="featureName" column="featureName" />
			<result property="featureIcon" column="featureIcon" />
			<collection property="groups" ofType="com.innovate.cms.modules.qs.entity.menus.Groups">
				<result property="gid" column="gid" />
				<result property="groupName" column="groupName" />
				<result property="groupDescription" column="groupDescription" />
				<result property="templateTag" column="templateTag" />
				<result property="groupIcon" column="groupIcon" />
				<result property="smallIcon" column="smallIcon" />
			</collection>
		</collection>
	</resultMap>
	
	<select id="getFeaturesByCid" resultMap="featuresList">
		SELECT
			a1.cid AS "cid",
			a1.fsid AS "fsid",
			a2.gid AS "gid",
			a1.feature_name AS "featureName",
			a1.icon AS "featureIcon",
			a2.group_name AS "groupName",
			a2.group_description AS "groupDescription",
			a2.template_tag AS "templateTag",
			a2.small_icon AS "smallIcon",
			a2.icon AS "groupIcon"
		FROM
			qx_features AS a1,
			qx_groups AS a2
		WHERE
			a1.fsid = a2.fsid
		AND a1.cid = #{cid}
		AND a1.del_flag = '0'
		AND a2.del_flag = a1.del_flag
		ORDER BY
			a1.sort,
			a2.sort
	</select>
	
	<select id="getAllFeatures" resultType="com.innovate.cms.modules.qs.entity.menus.FeatureMenu">
		SELECT
			fsid,
			feature_name AS "featureName"
		FROM
			qx_features
		WHERE
			fsid != 1
		AND del_flag = "0"
		ORDER BY
			sort
	</select>
	
</mapper>