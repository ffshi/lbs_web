<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovate.cms.modules.qs.dao.ques.QxQuestionsDao">

	<sql id="qxQuestionsColumns">
		a.qid AS "qid",
		a.create_name AS "createName",
		a.gid AS
		"gid",
		a.template_tag AS "templateTag",
		a.subject1_type AS
		"subject1Type",
		a.subject2_type AS "subject2Type",
		a.subject1 AS
		"subject1",
		a.subject2 AS "subject2",
		a.tag AS "tag",
		a.update_time AS
		"updateTime",
		a.create_time AS "createTime",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="qxQuestionsJoins">
	</sql>


	<select id="myUgc" resultType="com.innovate.cms.modules.qs.entity.ques.Group0">
		SELECT
		g.gid as gid,
		g.group_name as groupName,
		g.template_tag AS templateTag
		FROM
		qx_groups g
		WHERE
		g.uid = #{uid}  ORDER BY g.create_time DESC
	</select>



	<select id="getConfig1" resultType="com.innovate.cms.modules.data.entity.MarketGroupConfigueToJson">
		SELECT
		doButton,
		redoButton,
		shareButton,
		retestButton,
		moretestButton,
		pagehomeBg,
		quesBg,
		resBg,
		rateBg,
		ratedoneBg,
		rankBg,
		rankTitle,
		frameColor,
		masterColor,
		strongColor,
		reserveColor,
		resSort,
		music
		FROM
		market_group_configue where gid=#{gid}
	</select>
	<select id="getConfig" resultType="com.innovate.cms.modules.data.entity.MarketGroupConfigueToJson">
		SELECT
		*
		FROM
		market_group_configue where gid=#{gid}
	</select>

	<select id="get" resultType="QxQuestions">
		SELECT
		<include refid="qxQuestionsColumns" />
		FROM qx_questions a
		<include refid="qxQuestionsJoins" />
		WHERE a.qid = #{qid}
	</select>

	<select id="marketGroupRecommend" resultType="com.innovate.cms.modules.data.entity.MarketGroupRecommendToJson">
		SELECT
		pic,
		recommendType,
		url,
		title,
		templateTag
		FROM
		market_group_recommend
		WHERE
		gid = #{gid};
	</select>


	<resultMap type="com.innovate.cms.modules.qs.entity.ques.Questions" id="QuestionListResult">
		<id column="qid" property="qid" />
		<result column="icon" property="icon" />
		<result column="fsid" property="fsid" />
		<result column="groupName" property="groupName" />
		<result column="groupDescription" property="groupDescription" />
		<result column="templateTag" property="templateTag" />
		<result column="rankTitle" property="rankTitle" />
		<result column="resDecription" property="resDecription" />
		<result column="subject1Type" property="subject1Type" />
		<result column="subject1" property="subject1" />
		<result column="subject2Type" property="subject2Type" />
		<result column="subject2" property="subject2" />
		<result column="tag" property="tag" />
		<result column="createTime" property="createTime" />
		<result column="field" property="field" />
		<collection property="options" ofType="com.innovate.cms.modules.qs.entity.ques.Options">
			<result property="option" column="option" />
			<result property="qaid" column="qaid" />
			<result property="count" column="count" />
			<result property="optionType" column="optionType" />
			<result property="ranksToResults" column="ranksToResults" />
			<result property="goTag" column="goTag" />
			<result property="seqId" column="seqId" />

		</collection>
	</resultMap>

	<resultMap type="com.innovate.cms.modules.data.entity.EssentialGroupToJson" id="essentialGroups">
		<id column="gid" property="gid" />
		<result column="uid" property="uid" />
		<result column="nickname" property="nickname" />
		<result column="headimgurl" property="headimgurl" />
		<result column="fsid" property="fsid" />
		<result column="groupName" property="groupName" />
		<result column="templateTag" property="templateTag" />
		<result column="recommended" property="recommended" />
		<result column="praiseNum" property="praiseNum" />
		<result column="commentNum" property="commentNum" />
		<collection property="optionsAndNums" ofType="com.innovate.cms.modules.qs.entity.ques.OptionsAndNum">
			<result property="qaid" column="qaid" />
			<result property="seqId" column="seqId" />
			<result property="option" column="option" />
			<result property="count" column="count" />
		</collection>
	</resultMap>

	<select id="getQsbyGid" resultMap="QuestionListResult">
		SELECT
		qxq.fsid as "fsid",
		qxq.group_name as "groupName",
		qxq.icon as "icon",
		qxq.group_description as "groupDescription",
		ques.gid as "gid",
		ques.qid as "qid",
		ques.template_tag as "templateTag",
		qxq.rank_title as "rankTitle",
		qxq.res_decription as "resDecription",
		ques.subject1 as "subject1",
		ques.subject1_type as "subject1Type",
		ques.subject2 as "subject2",
		ques.subject2_type as "subject2Type",
		ques.tag as "tag",
		ques.create_time as "createTime",
		opt.seq_id as "seqId",
		opt.qaid as "qaid",
		optc.count as "count",
		opt.`option` as "option",
		opt.option_type as "optionType",
		opt.ranks_to_results as "ranksToResults",
		opt.go_tag as "goTag",
		opt.seq_id as "seqId"
		FROM
		qx_groups qxq,
		qx_questions ques,
		qx_questions_option opt,
		qx_questions_option_count optc
		WHERE
		ques.del_flag = '0'
		AND ques.gid = #{gid}
		AND ques.qid = opt.qid
		AND qxq.gid= ques.gid
		AND opt.qaid = optc.qaid
		AND ques.template_tag = #{templateTag}
		ORDER BY ques.tag, opt.seq_id
	</select>

	<select id="getEssentialGroups" resultMap="essentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.sort,
		qq.template_tag AS "templateTag",
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		qx_groups qg,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		qg.template_tag = "0"
		AND qg.is_homepage = "1"
		AND qg.create_time &gt;= #{startDate}
		AND qg.create_time &lt; #{endDate}
		AND qg.gid = qq.gid
		AND qq.qid = qqo.qid
		AND qg.uid = su.uid
		AND qg.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		ORDER BY o.sort, o.gid
	</select>
	
		<resultMap type="com.innovate.cms.modules.data.entity.EssentialGroupTestBToJson" id="essentialGroupsTestB">
		<id column="gid" property="gid" />
		<result column="uid" property="uid" />
		<result column="nickname" property="nickname" />
		<result column="headimgurl" property="headimgurl" />
		<result column="fsid" property="fsid" />
		<result column="groupName" property="groupName" />
		<result column="groupDescription" property="groupDescription" />
		<result column="templateTag" property="templateTag" />
		<result column="smallIcon" property="smallIcon" />
		<result column="recommended" property="recommended" />
		<result column="praiseNum" property="praiseNum" />
		<result column="commentNum" property="commentNum" />
		<collection property="optionsAndNums" ofType="com.innovate.cms.modules.qs.entity.ques.OptionsAndNum">
			<result property="qaid" column="qaid" />
			<result property="seqId" column="seqId" />
			<result property="option" column="option" />
			<result property="count" column="count" />
		</collection>
	</resultMap>
	<select id="getEssentialGroupsTestB" resultMap="essentialGroupsTestB">
		SELECT
			o.uid,
			o.nickname,
			o.headimgurl,
			o.fsid,
			o.gid,
			o.groupName,
			o.templateTag,
			o.qaid,
			o.seqId,
			o.`option`,
			o.groupDescription,
			o.smallIcon,
			qqoc.count
		FROM
			(
				SELECT
					su.uid,
					su.nickname,
					su.headimgurl,
					qg.fsid,
					qg.gid,
					qg.group_name AS "groupName",
					tb.sortNum AS "sort",
					qq.template_tag AS "templateTag",
					qqo.qaid,
					qqo.seq_id AS "seqId",
					qqo.`option`,
					qg.group_description as "groupDescription",
					qg.small_icon as "smallIcon"
				FROM
					qx_groups qg,
					qx_questions qq,
					qx_questions_option qqo,
					system_user su,
					qx_wishbone_config_testb tb
				WHERE
					tb.showDate = #{intDate}
				AND qg.gid = tb.gid
				AND qg.gid = qq.gid
				AND qq.qid = qqo.qid
				AND qg.uid = su.uid
				AND qg.del_flag = "0"
				AND qqo.del_flag = "0"
				AND su.del_flag = "0"
			) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		ORDER BY
			o.sort DESC,
			o.gid
	</select>

	<resultMap type="com.innovate.cms.modules.data.entity.XcxEssentialGroupToJson" id="xcxEssentialGroups">
		<id column="gid" property="gid" />
		<result column="uid" property="uid" />
		<result column="nickname" property="nickname" />
		<result column="headimgurl" property="headimgurl" />
		<result column="fsid" property="fsid" />
		<result column="groupName" property="groupName" />
		<result column="templateTag" property="templateTag" />
		<result column="recommended" property="recommended" />
		<result column="praiseNum" property="praiseNum" />
		<result column="commentNum" property="commentNum" />
		<result column="selected" property="selected" />
		<collection property="optionsAndNums" ofType="com.innovate.cms.modules.qs.entity.ques.OptionsAndNum">
			<result property="qaid" column="qaid" />
			<result property="seqId" column="seqId" />
			<result property="option" column="option" />
			<result property="count" column="count" />
		</collection>
	</resultMap>
	<select id="getXcxEssentialGroups" resultMap="xcxEssentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		h.results_tag AS "selected"
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.sort,
		qq.template_tag AS "templateTag",
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		qx_groups qg,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		qg.template_tag = "0"
		AND qg.is_homepage = "1"
		AND qg.create_time &gt;= #{startDate}
		AND qg.create_time &lt; #{endDate}
		AND qg.gid = qq.gid
		AND qq.qid = qqo.qid
		AND qg.uid = su.uid
		AND qg.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_history h ON h.uid=#{uid} AND h.gid=o.gid
		ORDER BY o.sort, o.gid
	</select>
	<select id="getCommunityGroupList" resultMap="essentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.recommended,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		g.fsid,
		g.gid,
		g.groupName,
		g.templateTag,
		g.recommended,
		g.updateTime,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		(
		SELECT
		qg.uid,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.template_tag AS "templateTag",
		qg.recommended,
		qg.update_time AS "updateTime"
		FROM
		qx_groups qg
		WHERE
		qg.del_flag = "0"
		AND qg.template_tag = "0"
		AND qg.create_time &lt;= NOW()
		ORDER BY
		qg.recommended DESC, qg.update_time DESC
		LIMIT 10
		) AS g,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		g.gid = qq.gid
		AND qq.qid = qqo.qid
		AND g.uid = su.uid
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		ORDER BY
		o.recommended DESC, o.updateTime DESC
	</select>
	<select id="getXcxCommunityGroupList" resultMap="xcxEssentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.recommended,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum,
		h.results_tag AS "selected"
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		g.fsid,
		g.gid,
		g.groupName,
		g.templateTag,
		g.recommended,
		g.updateTime,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		(
		SELECT
		qg.uid,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.template_tag AS "templateTag",
		qg.recommended,
		qg.update_time AS "updateTime"
		FROM
		qx_groups qg
		WHERE
		qg.del_flag = "0"
		AND qg.template_tag = "0"
		AND qg.create_time &lt;= NOW()
		ORDER BY
		qg.recommended DESC, qg.update_time DESC
		LIMIT 10
		) AS g,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		g.gid = qq.gid
		AND qq.qid = qqo.qid
		AND g.uid = su.uid
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON h.uid=#{uid} AND h.gid=o.gid
		ORDER BY
		o.recommended DESC, o.updateTime DESC
	</select>

	<select id="getMoreGroups" resultMap="essentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.recommended,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		g.fsid,
		g.gid,
		g.groupName,
		g.templateTag,
		g.recommended,
		g.updateTime,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		(
		SELECT
		qg.uid,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.template_tag AS "templateTag",
		qg.recommended,
		qg.update_time AS "updateTime"
		FROM
		qx_groups qg
		WHERE
		qg.del_flag = "0"
		AND qg.template_tag = "0"
		AND qg.gid &lt; #{gid}
		AND qg.create_time &lt;= NOW()
		ORDER BY
		qg.recommended DESC, qg.update_time DESC
		LIMIT 10
		) AS g,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		g.gid = qq.gid
		AND qq.qid = qqo.qid
		AND g.uid = su.uid
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		ORDER BY
		o.recommended DESC, o.updateTime DESC
	</select>
	<select id="getXcxMoreGroups" resultMap="xcxEssentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.recommended,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum,
		h.results_tag AS "selected"
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		g.fsid,
		g.gid,
		g.groupName,
		g.templateTag,
		g.recommended,
		g.updateTime,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		(
		SELECT
		qg.uid,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.template_tag AS "templateTag",
		qg.recommended,
		qg.update_time AS "updateTime"
		FROM
		qx_groups qg
		WHERE
		qg.del_flag = "0"
		AND qg.template_tag = "0"
		AND qg.gid &lt; #{gid}
		AND qg.create_time &lt;= NOW()
		ORDER BY
		qg.recommended DESC, qg.update_time DESC
		LIMIT 10
		) AS g,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		g.gid = qq.gid
		AND qq.qid = qqo.qid
		AND g.uid = su.uid
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON h.uid=#{uid} AND h.gid=o.gid
		ORDER BY
		o.recommended DESC, o.updateTime DESC
	</select>

	<select id="getAllNewCommunityGroups" resultMap="essentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.recommended,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		g.fsid,
		g.gid,
		g.groupName,
		g.templateTag,
		g.recommended,
		g.updateTime,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		(
		SELECT
		qg.uid,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.template_tag AS "templateTag",
		qg.recommended,
		qg.update_time AS "updateTime"
		FROM
		qx_groups qg
		WHERE
		qg.del_flag = "0"
		AND qg.template_tag = "0"
		AND qg.gid &gt; #{gid}
		AND qg.create_time &lt;= NOW()
		) AS g,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		g.gid = qq.gid
		AND qq.qid = qqo.qid
		AND g.uid = su.uid
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		ORDER BY
		o.recommended DESC, o.updateTime DESC
	</select>
	<select id="getXcxAllNewCommunityGroups" resultMap="xcxEssentialGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.fsid,
		o.gid,
		o.groupName,
		o.templateTag,
		o.recommended,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum,
		h.results_tag AS "selected"
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		g.fsid,
		g.gid,
		g.groupName,
		g.templateTag,
		g.recommended,
		g.updateTime,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		(
		SELECT
		qg.uid,
		qg.fsid,
		qg.gid,
		qg.group_name AS "groupName",
		qg.template_tag AS "templateTag",
		qg.recommended,
		qg.update_time AS "updateTime"
		FROM
		qx_groups qg
		WHERE
		qg.del_flag = "0"
		AND qg.template_tag = "0"
		AND qg.gid &gt; #{gid}
		AND qg.create_time &lt;= NOW()
		) AS g,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		g.gid = qq.gid
		AND qq.qid = qqo.qid
		AND g.uid = su.uid
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON h.uid=#{uid} AND h.gid=o.gid
		ORDER BY
		o.recommended DESC, o.updateTime DESC
	</select>

	<resultMap type="com.innovate.cms.modules.data.entity.UgcGroupToJson" id="ugcGroups">
		<id column="gid" property="gid" />
		<result column="uid" property="uid" />
		<result column="nickname" property="nickname" />
		<result column="headimgurl" property="headimgurl" />
		<result column="groupName" property="groupName" />
		<result column="praiseNum" property="praiseNum" />
		<result column="fsid" property="fsid" />
		<result column="commentNum" property="commentNum" />
		<result column="done" property="done" />
		<collection property="optionsAndNums" ofType="com.innovate.cms.modules.qs.entity.ques.OptionsAndNum">
			<result property="qaid" column="qaid" />
			<result property="seqId" column="seqId" />
			<result property="option" column="option" />
			<result property="count" column="count" />
		</collection>
	</resultMap>
	<select id="getUgcGroups" resultMap="ugcGroups">
		SELECT
		o.uid,
		o.nickname,
		o.headimgurl,
		o.gid,
		o.groupName,
		o.qaid,
		o.seqId,
		o.fsid,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		qg.gid,
		qg.group_name AS "groupName",
		qg.template_tag AS "templateTag",
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`,
		qg.create_time AS "create_time",
		qg.fsid
		FROM
		qx_groups qg,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		qg.template_tag = "0"
		AND su.uid= #{uid}
		AND qg.gid = qq.gid
		AND qq.qid = qqo.qid
		AND qg.uid = su.uid
		AND qg.del_flag = "0"
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		ORDER BY o.create_time DESC
	</select>


	<resultMap type="com.innovate.cms.modules.data.entity.UgcHistoryGroupToJson" id="ugcHistoryGroups">
		<id column="gid" property="gid" />
		<result column="uid" property="uid" />
		<result column="nickname" property="nickname" />
		<result column="headimgurl" property="headimgurl" />
		<result column="groupName" property="groupName" />
		<result column="fsid" property="fsid" />
		<result column="praiseNum" property="praiseNum" />
		<result column="commentNum" property="commentNum" />
		<result column="selected" property="selected" />
		<result column="followSelected" property="followSelected" />
		<collection property="optionsAndNums" ofType="com.innovate.cms.modules.qs.entity.ques.OptionsAndNum">
			<result property="qaid" column="qaid" />
			<result property="seqId" column="seqId" />
			<result property="option" column="option" />
			<result property="count" column="count" />
		</collection>
	</resultMap>

	<select id="getHistoryGroups" resultMap="ugcHistoryGroups">
		SELECT
		h.results as "selected",
		o.uid,
		o.nickname,
		o.headimgurl,
		o.gid,
		o.groupName,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		qg.gid,
		qg.group_name AS "groupName",
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		qx_groups qg,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		qg.gid in (SELECT gid from qx_history where uid=#{uid} AND template_tag=0 )
		AND qg.gid = qq.gid
		AND qq.qid = qqo.qid
		AND qg.uid = su.uid
		AND qg.del_flag = "0"
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON h.uid=#{uid} AND h.gid=o.gid
		ORDER BY h.create_time DESC limit 200

	</select>
	
	<select id="getXcxUgcGroups" resultMap="ugcHistoryGroups">
		SELECT
			o.uid,
			o.nickname,
			o.headimgurl,
			o.gid,
			o.groupName,
			o.qaid,
			o.seqId,
			o.fsid,
			o.`option`,
			qqoc.count,
			qgs.praiseNum,
			qgs.commentNum,
			h.results_tag AS "selected"
		FROM
			(
				SELECT
					su.uid,
					su.nickname,
					su.headimgurl,
					qg.gid,
					qg.group_name AS "groupName",
					qg.template_tag AS "templateTag",
					qqo.qaid,
					qqo.seq_id AS "seqId",
					qqo.`option`,
					qg.create_time AS "create_time",
					qg.fsid
				FROM
					qx_groups qg,
					qx_questions qq,
					qx_questions_option qqo,
					system_user su
				WHERE
					qg.template_tag = "0"
				AND su.uid= #{uid}
				AND	qg.gid = qq.gid
				AND qq.qid = qqo.qid
				AND qg.uid = su.uid
				AND qg.del_flag = "0"
				AND qq.del_flag = "0"
				AND qqo.del_flag = "0"
				AND su.del_flag = "0"
			) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON o.uid=h.uid AND o.gid=h.gid 
		ORDER BY o.create_time DESC
	
	</select>
	<select id="getXcxfUgcGroups" resultMap="ugcHistoryGroups">
		SELECT
			o.uid,
			o.nickname,
			o.headimgurl,
			o.gid,
			o.groupName,
			o.qaid,
			o.seqId,
			o.fsid,
			o.`option`,
			qqoc.count,
			qgs.praiseNum,
			qgs.commentNum,
			h.results_tag AS "selected"
		FROM
			(
				SELECT
					su.uid,
					su.nickname,
					su.headimgurl,
					qg.gid,
					qg.group_name AS "groupName",
					qg.template_tag AS "templateTag",
					qqo.qaid,
					qqo.seq_id AS "seqId",
					qqo.`option`,
					qg.create_time AS "create_time",
					qg.fsid
				FROM
					qx_groups qg,
					qx_questions qq,
					qx_questions_option qqo,
					system_user su
				WHERE
					qg.template_tag = "0"
				AND su.uid= #{fuid}
				AND	qg.gid = qq.gid
				AND qq.qid = qqo.qid
				AND qg.uid = su.uid
				AND qg.del_flag = "0"
				AND qq.del_flag = "0"
				AND qqo.del_flag = "0"
				AND su.del_flag = "0"
			) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON h.uid=#{uid} AND o.gid=h.gid 
		ORDER BY o.create_time DESC
	
	</select>

	<select id="getT0" resultMap="ugcHistoryGroups">
		SELECT
		h.results as "selected",
		o.uid,
		o.nickname,
		o.headimgurl,
		o.gid,
		o.groupName,
		o.fsid,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		qg.gid,
		qg.group_name AS "groupName",
		qg.fsid,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		qx_groups qg,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		qg.gid = #{gid}
		AND qg.gid = qq.gid
		AND qq.qid = qqo.qid
		AND qg.uid = su.uid
		AND qg.del_flag = "0"
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON h.uid=#{uid} AND h.gid=o.gid

	</select>

	<select id="getT0ByFollowDynamic" resultMap="ugcHistoryGroups">
		SELECT
		h.results AS "selected",
		IFNULL(qh.results, 0) AS "followSelected",
		o.uid,
		o.nickname,
		o.headimgurl,
		o.gid,
		o.groupName,
		o.fsid,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum
		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		qg.gid,
		qg.group_name AS "groupName",
		qg.fsid,
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		qx_groups qg,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		qg.gid = #{gid}
		AND qg.gid = qq.gid
		AND qq.qid = qqo.qid
		AND qg.uid = su.uid
		AND qg.del_flag = "0"
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h ON h.uid = #{uid} AND h.gid = o.gid
		LEFT JOIN qx_history qh ON qh.uid = #{followUid} AND qh.gid = o.gid
	</select>

	<select id="getUgcGroupsH5" resultMap="ugcGroups">
		SELECT
		h.results as "done",
		o.uid,
		o.nickname,
		o.headimgurl,
		o.gid,
		o.groupName,
		o.qaid,
		o.seqId,
		o.`option`,
		qqoc.count,
		qgs.praiseNum,
		qgs.commentNum

		FROM
		(
		SELECT
		su.uid,
		su.nickname,
		su.headimgurl,
		qg.gid,
		qg.group_name AS "groupName",
		qqo.qaid,
		qqo.seq_id AS "seqId",
		qqo.`option`
		FROM
		qx_groups qg,
		qx_questions qq,
		qx_questions_option qqo,
		system_user su
		WHERE
		qg.template_tag = "0"
		AND qg.gid=#{gid}
		AND qg.gid = qq.gid
		AND qq.qid = qqo.qid
		AND qg.uid = su.uid
		AND qg.del_flag = "0"
		AND qq.del_flag = "0"
		AND qqo.del_flag = "0"
		AND su.del_flag = "0"
		) o
		LEFT JOIN qx_questions_option_count qqoc ON o.qaid = qqoc.qaid
		LEFT JOIN qx_group_statistic qgs ON o.gid = qgs.gid
		LEFT JOIN qx_history h on h.uid=#{uid} AND h.gid=o.gid
	</select>


	<resultMap type="com.innovate.cms.modules.qs.entity.ques.Questions" id="QuestionListResultUserfoot">
		<id column="qid" property="qid" />
		<result column="icon" property="icon" />
		<result column="fsid" property="fsid" />
		<result column="groupName" property="groupName" />
		<result column="groupDescription" property="groupDescription" />
		<result column="templateTag" property="templateTag" />
		<result column="rankTitle" property="rankTitle" />
		<result column="resDecription" property="resDecription" />
		<result column="subject1Type" property="subject1Type" />
		<result column="subject1" property="subject1" />
		<result column="subject2Type" property="subject2Type" />
		<result column="subject2" property="subject2" />
		<result column="tag" property="tag" />
		<result column="createTime" property="createTime" />
		<result column="field" property="field" />
		<result column="answer" property="answer" />
		<collection property="options" ofType="com.innovate.cms.modules.qs.entity.ques.Options">
			<result property="option" column="option" />
			<result property="qaid" column="qaid" />
			<result property="count" column="count" />
			<result property="optionType" column="optionType" />
			<result property="ranksToResults" column="ranksToResults" />
			<result property="goTag" column="goTag" />
			<result property="seqId" column="seqId" />
		</collection>
	</resultMap>
	<select id="getQsbyGidFromUserfoot" resultMap="QuestionListResultUserfoot">
		SELECT
		qxq.fsid as "fsid",
		qxq.group_name as "groupName",
		qxq.icon as "icon",
		qxq.group_description as "groupDescription",
		ques.gid as "gid",
		ques.qid as "qid",
		ques.template_tag as "templateTag",
		qxq.rank_title as "rankTitle",
		qxq.res_decription as "resDecription",
		ques.subject1 as "subject1",
		ques.subject1_type as "subject1Type",
		ques.subject2 as "subject2",
		ques.subject2_type as "subject2Type",
		ques.tag as "tag",
		ques.create_time as "createTime",
		qha.answer as "answer",
		opt.seq_id as "seqId",
		opt.qaid as "qaid",
		optc.count as "count",
		opt.`option` as "option",
		opt.option_type as "optionType",
		opt.ranks_to_results as "ranksToResults",
		opt.go_tag as "goTag",
		opt.seq_id as "seqId"
		FROM
		qx_groups qxq,
		qx_questions ques,
		qx_questions_option opt,
		qx_questions_option_count optc,
		qx_history_answer qha
		WHERE
		ques.del_flag = '0'
		AND ques.gid = #{gid}
		AND ques.qid = opt.qid
		AND qxq.gid= ques.gid
		AND opt.qaid = optc.qaid
		AND qha.uid = #{uid}
		AND qha.gid = ques.gid
		AND qha.qid = ques.qid
		AND ques.template_tag = #{templateTag}
		ORDER BY ques.tag, opt.seq_id
	</select>


	<select id="findList" resultType="QxQuestions">
		SELECT
		<include refid="qxQuestionsColumns" />
		FROM qx_questions a
		<include refid="qxQuestionsJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="qid != null and qid != ''">
				AND a.qid = #{qid}
			</if>
			<if test="gid != null and gid != ''">
				AND a.gid = #{gid}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="QxQuestions">
		SELECT
		<include refid="qxQuestionsColumns" />
		FROM qx_questions a
		<include refid="qxQuestionsJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>


	<select id="getGroupForPcweb" resultType="com.innovate.cms.modules.data.entity.GroupForPcwebToJson">
		SELECT
		g.gid AS "gid",
		g.fsid AS "fsid",
		g.group_name AS "groupName",
		g.group_description AS "groupDescription",
		g.template_tag AS "templateTag",
		g.icon AS "icon",
		g.small_icon AS "smallIcon"
		FROM
		qx_groups g
		WHERE
		gid = #{gid};
	</select>

	<insert id="insert">
		INSERT INTO qx_questions(
		qid,
		create_name,
		gid,
		template_tag,
		subject1_type,
		subject2_type,
		subject1,
		subject2,
		tag,
		update_time,
		create_time,
		del_flag
		) VALUES (
		#{qid},
		#{createName},
		#{gid},
		#{templateTag},
		#{subject1Type},
		#{subject2Type},
		#{subject1},
		#{subject2},
		#{tag},
		#{updateTime},
		#{createTime},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE qx_questions SET
		qid = #{qid},
		create_name = #{createName},
		gid = #{gid},
		template_tag = #{templateTag},
		subject1_type = #{subject1Type},
		subject2_type = #{subject2Type},
		subject1 = #{subject1},
		subject2 = #{subject2},
		tag = #{tag},
		update_time = #{updateTime},
		create_time = #{createTime}
		WHERE qid = #{qid}
	</update>

	<update id="delete">
		UPDATE qx_questions SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE qid = #{qid}
	</update>

</mapper>